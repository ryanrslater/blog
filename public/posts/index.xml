<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Ryan&#39;s Cookbook</title>
    <link>https://ryanrslater.github.io/posts/</link>
    <description>Recent content in Posts on Ryan&#39;s Cookbook</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 20 Jan 2023 23:33:39 +0000</lastBuildDate><atom:link href="https://ryanrslater.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Spring Boot JPA One to One relationships</title>
      <link>https://ryanrslater.github.io/posts/spring-boot-jpa-one-to-one/</link>
      <pubDate>Fri, 20 Jan 2023 23:33:39 +0000</pubDate>
      
      <guid>https://ryanrslater.github.io/posts/spring-boot-jpa-one-to-one/</guid>
      <description>One to One relationships with Spring boot JPA TLDR Create two Entities you wish to join (they must have the @Entity annotation) On your main Entity create a reference to the other Entity you wish to connect with the @OneToOne and @JoinColumn annotations Within the @JoinColumn annotaions add the name and reference column to the other Entity @OneToOne @JoinColumn(name = &amp;#34;address_id&amp;#34;, referencedColumnName = &amp;#34;id&amp;#34;) private Address address; Now head over to your second Entity and add the reference to the first Entity with the annotation @OneToOne Within the @OneToOne Entity add the mappedBy to the first Entity @OneToOne(mappedBy = &amp;#34;address&amp;#34;) private Account account; Introduction: In this post, we will discuss how to manage one-to-one relationships using Spring Boot and JPA.</description>
    </item>
    
  </channel>
</rss>
